blogdown::new_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
options(servr.daemon = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
options(servr.daemon = TRUE)
blogdown:::serve_site()
blogdown::new_post()
blogdown:::new_post_addin()
library(rvest)
library(tidyverse)
#' Scrape and clean data from profootballreference.com for a range of years.
#' returns a single tibble with a position, passing, rushing, receiving
#' statistics for each player, along with age etc.
#'
#' @param yrs vector -- integers between 1993 and 2016
#' @param write logical -- whether or not to write the cleaned data to a csv in
#' the ./Data folder
#'
#' @return df_bound a tibble
#' @export fantasy_data_YRSTART_YREND.csv
#'
#' @examples
#'
scrape_fantasy <- function(yrs, write = TRUE) {
suppressWarnings(
df_bound <- lapply(yrs, pfr_single) %>%
bind_rows() %>%
as_data_frame() %>%
mutate_at(
.vars = vars(-name, -team, -pos),
.funs = as.numeric
) %>%
filter(pos != "", !is.na(f_points))
)
if(write) {
write_csv(df_bound,
sprintf("./Data/fantasy_data_%d_%d.csv", min(yrs), max(yrs)))
}
return(df_bound)
}
#' Scrape and clean data from profootballreference.com for a single
#' returns a single tibble with a position, passing, rushing, receiving
#' statistics for each player, along with age etc.
#'
#' @param yr integer -- integers between 1992 and 2016
#'
#' @return tbl_clean a tibble
#' @export
#'
#' @examples
#'
pfr_single <- function(yr) {
url <- sprintf("https://www.pro-football-reference.com/years/%d/fantasy.htm",
yr) # 1.
cols <- c("rank", "name", "team", "pos", "age", "played", "started",
"pass_cmp", "pass_att", "pass_yds", "pass_td", "pass_int",
"rush_att", "rush_yds", "rush_ypc", "rush_td",
"rec_tgt", "rec_rec", "rec_yds", "rec_ypr", "rec_td",
"f_points", "dkpt", "fdpt", "vbd", "pos_rank", "ov_rank") # 2.
print(url)
tbl_raw <- (read_html(url) %>% # 3.
html_table(header = FALSE))[[1]] # 4.
colnames(tbl_raw) <- cols
tbl_clean <- tbl_raw %>%
mutate(year = yr, rank = as.integer(rank)) %>%
filter(complete.cases(.)) # 5.
return(tbl_clean)
}
df_stats <- scrape_fantasy(yrs = 1992:2016)
pfr_single(1995)
x <- pfr_single(1995)
x mutate_at(
.vars = vars(-name, -team, -pos),
.funs = as.numeric
)
x %>% mutate_at(
.vars = vars(-name, -team, -pos),
.funs = as.numeric
)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
x %>% mutate_at(
.vars = vars(-name, -team, -pos),
.funs = as.numeric
)
library(tidyverse)
library(rvest)
library(tidyverse)
blogdown:::serve_site()
blogdown::stop_server()
library(tidyverse)
x
library(rvest)
library(dplyr)
#' Scrape and clean data from profootballreference.com for a single
#' returns a single tibble with a position, passing, rushing, receiving
#' statistics for each player, along with age etc.
#'
#' @param yr integer -- integers between 1992 and 2016
#'
#' @return tbl_clean a tibble
#' @export
#'
#' @examples
#'
pfr_single <- function(yr) {
url <- sprintf("https://www.pro-football-reference.com/years/%d/fantasy.htm",
yr) # 1.
cols <- c("rank", "name", "team", "pos", "age", "played", "started",
"pass_cmp", "pass_att", "pass_yds", "pass_td", "pass_int",
"rush_att", "rush_yds", "rush_ypc", "rush_td",
"rec_tgt", "rec_rec", "rec_yds", "rec_ypr", "rec_td",
"f_points", "dkpt", "fdpt", "vbd", "pos_rank", "ov_rank") # 2.
print(url)
tbl_raw <- (read_html(url) %>% # 3.
html_table(header = FALSE))[[1]] # 4.
colnames(tbl_raw) <- cols
tbl_clean <- tbl_raw %>%
mutate(year = yr, rank = as.integer(rank)) %>%
filter(complete.cases(.)) # 5.
return(tbl_clean)
}
#' Scrape and clean data from profootballreference.com for a single
#' returns a single tibble with a position, passing, rushing, receiving
#' statistics for each player, along with age etc.
#'
#' @param yr integer -- integers between 1992 and 2016
#'
#' @return tbl_clean a tibble
#' @export
#'
#' @examples
#'
pfr_single <- function(yr) {
url <- sprintf("https://www.pro-football-reference.com/years/%d/fantasy.htm",
yr) # 1.
cols <- c("rank", "name", "team", "pos", "age", "played", "started",
"pass_cmp", "pass_att", "pass_yds", "pass_td", "pass_int",
"rush_att", "rush_yds", "rush_ypc", "rush_td",
"rec_tgt", "rec_rec", "rec_yds", "rec_ypr", "rec_td",
"f_points", "dkpt", "fdpt", "vbd", "pos_rank", "ov_rank") # 2.
print(url)
tbl_raw <- (read_html(url) %>% # 3.
html_table(header = FALSE))[[1]] # 4.
colnames(tbl_raw) <- cols
tbl_clean <- tbl_raw %>%
mutate(year = yr, rank = as.integer(rank)) %>%
filter(complete.cases(.)) # 5.
return(tbl_clean)
}
#' Scrape and clean data from profootballreference.com for a range of years.
#' returns a single tibble with a position, passing, rushing, receiving
#' statistics for each player, along with age etc.
#'
#' @param yrs vector -- integers between 1993 and 2016
#' @param write logical -- whether or not to write the cleaned data to a csv in
#' the ./Data folder
#'
#' @return df_bound a tibble
#' @export fantasy_data_YRSTART_YREND.csv
#'
#' @examples
#'
scrape_fantasy <- function(yrs, write = TRUE) {
suppressWarnings(
df_bound <- lapply(yrs, pfr_single) %>%
bind_rows() %>%
as_data_frame() %>%
mutate_at(
.vars = vars(-name, -team, -pos),
.funs = as.numeric
) %>%
filter(pos != "", !is.na(f_points))
)
if(write) {
write_csv(df_bound,
sprintf("./Data/fantasy_data_%d_%d.csv", min(yrs), max(yrs)))
}
return(df_bound)
}
x %>% mutate_at(
.vars = vars(-name, -team, -pos),
.funs = as.numeric
)
x %>% mutate_at(
.cols = vars(-name, -team, -pos),
.funs = as.numeric
)
#' Scrape and clean data from profootballreference.com for a range of years.
#' returns a single tibble with a position, passing, rushing, receiving
#' statistics for each player, along with age etc.
#'
#' @param yrs vector -- integers between 1993 and 2016
#' @param write logical -- whether or not to write the cleaned data to a csv in
#' the ./Data folder
#'
#' @return df_bound a tibble
#' @export fantasy_data_YRSTART_YREND.csv
#'
#' @examples
#'
scrape_fantasy <- function(yrs, write = TRUE) {
suppressWarnings(
df_bound <- lapply(yrs, pfr_single) %>%
bind_rows() %>%
as_data_frame() %>%
mutate_at(
.cols = vars(-name, -team, -pos),
.funs = as.numeric
) %>%
filter(pos != "", !is.na(f_points))
)
if(write) {
write_csv(df_bound,
sprintf("./Data/fantasy_data_%d_%d.csv", min(yrs), max(yrs)))
}
return(df_bound)
}
df_stats <- scrape_fantasy(yrs = 1992:2016)
scrape_fantasy(yrs = 1992:1994)
library(rvest)
library(tidyverse)
library(rvest)
library(dplyr)
library(readr)
scrape_fantasy(1992:1994)
scrape_fantasy(1992:1994)
blogdown:::serve_site()
blogdown:::serve_site()
df_stats %>%
filter(f_points > 0) %>%
ggplot(aes(age)) +
geom_bar(alpha = 0.4) +
geom_jitter(aes(y = f_points, colour = pos), alpha = 0.1)
library(rvest)
library(dplyr)
library(readr)
library(ggplot2)
library(ggthemes)
blogdown:::serve_site()
df_stats <- scrape_fantasy(yrs = 1992:1995, write = FALSE)
df_stats %>%
filter(f_points > 0) %>%
ggplot(aes(f_points, fill = pos)) +
geom_histogram(binwidth = 1) +
ggthemes::scale_fill_wsj() +
facet_grid(pos~.)
df_stats %>%
filter(f_points > 0) %>%
ggplot(aes(f_points, fill = pos)) +
geom_histogram(binwidth = 10) +
ggthemes::scale_fill_wsj() +
facet_grid(pos~.)
df_stats %>%
filter(f_points > 0) %>%
ggplot(aes(f_points, fill = pos)) +
geom_histogram(binwidth = 5) +
ggthemes::scale_fill_wsj() +
facet_grid(pos~.)
df_stats %>%
filter(f_points > 0) %>%
ggplot(aes(age)) +
geom_bar(alpha = 0.4) +
geom_jitter(aes(y = f_points, colour = pos), alpha = 0.1)
ggthemes::scale_color_wsj() +
facet_grid(pos~.)
df_stats %>%
filter(f_points > 0) %>%
ggplot(aes(age)) +
geom_bar(alpha = 0.4) +
geom_jitter(aes(y = f_points, colour = pos), alpha = 0.1) %>%
ggthemes::scale_color_wsj() +
facet_grid(pos~.)
df_stats %>%
filter(f_points > 0) %>%
ggplot(aes(age)) +
geom_bar(alpha = 0.4) +
geom_jitter(aes(y = f_points, colour = pos), alpha = 0.1) +
ggthemes::scale_color_wsj() +
facet_grid(pos~.)
blogdown:::serve_site()
blogdown::install_theme("dim0627/hugo_theme_robust")
blogdown::install_theme("homerhanumat/hugo-theme-slim")
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tibble)
gapminder
gapminder::continent_colors
library(gapminder)
gapminder
data("EuStockMarkets")
EuStockMarkets
options(servr.daemon = TRUE)
blogdown::serve_site()
blogdown::serve_site()
df_stats <- scrape_fantasy(yrs = 1992:1993, write = FALSE)
blogdown::serve_site()
blogdown::install_theme("kishaningithub/hugo-creative-portfolio-theme")
blogdown::serve_site()
blogdown::build_site(theme = "kishaningithub/hugo-creative-portfolio-theme")
blogdown::new_site(theme = "kishaningithub/hugo-creative-portfolio-theme")
blogdown::new_site()
